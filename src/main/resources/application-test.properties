# Test Configuration - Minimal Setup
spring.application.name=crm-backend-test

# Use embedded MongoDB for testing (requires dependency)
# For now, we'll use a test MongoDB URI
spring.data.mongodb.uri=mongodb://localhost:27017/xeno_crm_test
spring.data.mongodb.database=xeno_crm_test

# Server Configuration
server.port=8080

# Disable OAuth for testing
spring.security.oauth2.client.registration.google.client-id=test-client-id
spring.security.oauth2.client.registration.google.client-secret=test-client-secret
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Session Configuration
server.servlet.session.cookie.same-site=lax
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.http-only=true
server.servlet.session.timeout=30m

# CORS settings
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,HEAD
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Logging Configuration
logging.level.root=INFO
logging.level.com.xeno.crm_backend=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.cors=DEBUG
logging.level.org.springframework.data.mongodb=DEBUG

# MongoDB auto-index
spring.data.mongodb.auto-index-creation=true

# Actuator endpoints
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
